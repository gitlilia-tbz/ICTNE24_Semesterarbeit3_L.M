version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trackmygym
      POSTGRES_USER: trackmygym_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fitness-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trackmygym_user -d trackmygym"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - user-service
      - workout-service
      - stats-service
      - weather-service
    networks:
      - fitness-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - USER_SERVICE_URL=http://user-service:5001
      - WORKOUT_SERVICE_URL=http://workout-service:5002
      - STATS_SERVICE_URL=http://stats-service:5003
      - WEATHER_SERVICE_URL=http://weather-service:5004
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitness-network
    restart: unless-stopped

  weather-service:
    build: ./weather-service
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    networks:
      - fitness-network
    restart: unless-stopped

  user-service:
    build: ./user-service
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - DATABASE_URL=postgresql://trackmygym_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/trackmygym
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitness-network
    restart: unless-stopped

  workout-service:
    build: ./workout-service
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - USER_SERVICE_URL=http://user-service:5001
      - DATABASE_URL=postgresql://trackmygym_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/trackmygym
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitness-network
    restart: unless-stopped

  stats-service:
    build: ./stats-service
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - WORKOUT_SERVICE_URL=http://workout-service:5002
      - DATABASE_URL=postgresql://trackmygym_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/trackmygym
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fitness-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fitness-network:
    driver: bridge